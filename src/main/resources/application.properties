spring.jpa.hibernate.ddl-auto=update
#required by Alan
#spring.datasource.initialization-mode=always
#spring.datasource.continue-on-error=false
#spring.datasource.data=classpath:import.sql

#required
spring.datasource.url=jdbc:mysql://localhost:3307/nera?createDatabaseIfNotExist=true&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://192.168.50.211:3307/nera?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=nera
spring.datasource.password=Nera@123
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
# Phuong add 5 3 2019
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.springframework.web=DEBUG
logging.level.com.nera.nms=DEBUG

# Clear session if server restart or start again
server.servlet.session.persistent=false

# Logging pattern for the console
logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Logging pattern for file
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

#output to a file
logging.file=logs/nera.log

#Server port
server.port = 8081

spring:
  thymeleaf
    cache: false 
    check-template: true
    check-template-location: true
    content-type: text/html
    enabled: true
    encoding: UTF-8
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html
    # excluded-view-names:
    # template-resolver-order:
    # view-names:

logging:
  level:
    root: WARN
    com.memorynotfound: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
 ## MULTIPART (MultipartProperties) Phuong 14/5/2019
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# Please change this to the path where you want the uploaded files to be stored.
file.upload-dir=C:/Nera/Upload
file.image-dir=C:/Nera/Images
file.ansible-dir=C:/Nera/Ansibles
file.scp-dir=/tmp/nera/

#file.ansible-dir=/home/marcus/Documents/BE/Nera/C:/Nera/Ansibles

#(UAT environment)
#file.upload-dir=/opt/Nera/Upload
#file.image-dir=/opt/Nera/Images
#file.ansible-dir=/opt/Nera/Ansibles

#Command SCP  on windows/linux
 #for windows
cmd.scp=pscp -scp
cmd.scp-ppkey=C:/Nera/remote.ppk

 #for linux
#cmd.scp=/usr/bin/scp
#cmd.scp-ppkey=/home/marcus/Documents/BE/Nera/C:/Nera/remote.pem

#Info RabbitMQ
rabbit.host=192.168.50.214
rabbit.username=admin
rabbit.password=admin
rabbit.port=5672
rabbit.queueName=rpc_queue

#Info Ansible
ansible.ansiblePlaybook=/usr/bin/ansible-playbook
ansible.ip=192.168.50.214
ansible.user=remote

# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

# Root logger option
log4j.rootLogger=INFO, stdout

# Hibernate logging options (INFO only shows startup messages)
log4j.logger.org.hibernate=INFO

# Log JDBC bind parameter runtime arguments
log4j.logger.org.hibernate.type=trace

# Config spring actuator
management.server.port=8081
# HEALTH ENDPOINT
management.endpoint.health.show-details=always
management.endpoints.beans.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
