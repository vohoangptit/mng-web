var checkMessageStop=false;var startDate;function checkingresultAnsible(d,b){var a=d.match(b);return a!==null}function getPlaybookOutput(b){var a=[];$.ajax({async:false,type:"GET",url:"/nera/playbook/api/get-by-id",data:{id:b},contentType:"application/json",success:function(d){$.each(d.playbookOutput,function(){a.push(this.variable)})}});return a}function submitComparePatt(e,d,a,b){$.each(e,function(){console.log(this);var g={};g.id=this.playbook;g.cell=this.nextCell;var f=this.paramvalue;$.each(b,function(h,j){if(f===j.key){f=j.val}});if(d===this.playbook){$.ajax({async:false,type:"POST",url:"/nera/my-job/api/get-compare-result",data:{src:f,target:this.value,key:this.conditionvalue},success:function(h){g.value=h;a.push(g)}})}else{console.log(this.paramkey+" "+this.value+" "+this.conditionvalue);$.ajax({async:false,type:"POST",url:"/nera/my-job/api/get-compare-result",data:{src:f,target:this.value,key:this.conditionvalue},success:function(h){g.value=h;a.push(g)}})}d=this.playbook});return a}function downloadFileLog(a){$.ajax({url:"/nera/upload/downloadFile/"+a,type:"GET",xhrFields:{responseType:"blob"},success:function(e){var b=document.createElement("a");var d=window.URL.createObjectURL(e);b.href=d;b.download=a;b.click();window.URL.revokeObjectURL(d)},error:function(b){}})}function getFullFlow(b,d,a){var e=getNextOps(b,d);if(e.length>0){$.each(e,function(g,f){a.push(f);getFullFlow(b,f,a)});return a}else{return}}function getCurrentDatetime(){var b=[];var a=["01","02","03","04","05","06","07","08","09","10","11","12"];var d=new Date();var e=d.getFullYear()+"-"+a[d.getMonth()]+"-"+d.getDate();var f=d.getHours()+":"+d.getMinutes()+":"+d.getSeconds();b.push(e);b.push(f);return b}function getCurrentDatetimeWithFormat_mm_dd_yyyy(){var b=[];var a=["01","02","03","04","05","06","07","08","09","10","11","12"];var d=new Date();var e=a[d.getMonth()]+"/"+d.getDate()+"/"+d.getFullYear();var f=d.getHours()+":"+d.getMinutes()+":"+d.getSeconds();b.push(e);b.push(f);return b}function combineConditions(b){var a=b[0];$.each(b,function(d){if(d+1<b.length){a=a&&b[d+1]}});return a}function getfromMap(b,d){var a=[];$.each(b,function(){if(this.cell!==null&&mxUtils.parseXml(this.cell.contentXML).documentElement.getAttribute("id")===d){a.push(this.value)}});return a}function getSwitchCase(a,d){var b=[];$.each(a,function(g,e){var k=mxUtils.parseXml(e.contentXML);new mxCodec(k);if(k.documentElement.nodeName==="Condition"&&k.documentElement.getAttribute("id")===d){var j=k.documentElement.getAttribute("id");var h=getMappingFlow(a,"connector");getNextOps(h,j);var f="";console.log(k.documentElement.attributes);$.each(k.documentElement.attributes,function(){var i={};if(typeof this.nodeName.split("value")[1]!=="undefined"){if(f!==this.nodeName.split("value")[1]){i.id=this.nodeName.split("value")[1];i.playbook=this.nodeName.split("value")[1].split("_")[0];$.ajax({async:false,type:"GET",url:"/nera/playbook/api/get-by-id",data:{id:mxUtils.parseXml(getOpsbyId(a,getPreviousOps(h,d)[0]).contentXML).documentElement.getAttribute("pbid")},contentType:"application/json",success:function(l){$.each(l.playbookOutput,function(){if(k.documentElement.attributes["paramkey"+i.id].nodeValue===this.variable){i.paramkey=this.value}})}});i.nextCell=getOpsbyName(a,k.documentElement.attributes["conditionPlaybook"+i.id].nodeValue);i.value=k.documentElement.attributes["value"+i.id].nodeValue;i.paramvalue=k.documentElement.attributes["paramkey"+i.id].nodeValue;i.conditionvalue=k.documentElement.attributes["conditionvalue"+i.id].nodeValue;b.push(i)}f=this.nodeName.split("value")[1]}})}});return b}function getNextOps(b,d){var a=[];$.each(b,function(f,e){if(e.from===d){a.push(e.to)}});return a}function getPreviousOps(b,d){var a=[];$.each(b,function(f,e){if(e.to===d){a.push(e.from)}});return a}function getMappingFlow(b,d){var a=[];$.each(b,function(g,e){if(e.properties===d){var h=mxUtils.parseXml(e.contentXML);new mxCodec(h);var f={};f.from=h.documentElement.childNodes[0].attributes.source.nodeValue;f.to=h.documentElement.childNodes[0].attributes.target.nodeValue;f.toname=mxUtils.parseXml(getOpsbyId(b,h.documentElement.childNodes[0].attributes.target.nodeValue).contentXML).documentElement;a.push(f)}});return a}function getOpsbyId(b,d){var a=null;$.each(b,function(f,e){var g=mxUtils.parseXml(e.contentXML);new mxCodec(g);if(g.documentElement.getAttribute("id")===d){a=e}});return a}function getOpsbyName(d,b){var a=null;$.each(d,function(f,e){var g=mxUtils.parseXml(e.contentXML);new mxCodec(g);if(g.documentElement.getAttribute("label")===b){a=e}});return a}function appendMessges(b,a){if(!checkMessageStop){$("#executionlog").append(getMsgTemplate(b,a));$("#executionlog").append("<br>")}return getMsgTemplate(b,a)}function getMsgTemplate(p,o){var t="";var r=[];var q=["Start","Playbook Execute","Playbook Receive","Switch Case","Switch Case Finish","Approver","Approver Status","End","Result Playbook","Connect Failed","Stopped"];var i=[];var d="{0}&ensp;{1}&ensp;START";var s="{0}&ensp;{1}&ensp;Execute the play book {2}";var j="{0}&ensp;{1}&ensp;Receive the execution result of  the play book{2}";var e="{0}&ensp;{1}&ensp;Proceed the switch case operator {2}";var f="{0}&ensp;{1}&ensp;Define the next operator is {2} {3}";var h="{0}&ensp;{1}&ensp;Send mail for asking approval";var l="{0}&ensp;{1}&ensp;Get approve from {2}";var g="{0}&ensp;{1}&ensp;END";var k="{0}&ensp;{1}&ensp;{2}";var b="{0}&ensp;{1}&ensp; Connect Rabbit Failed";var a="{0}&ensp;{1}&ensp; Job Execution stopped";i.push(d);i.push(s);i.push(j);i.push(e);i.push(f);i.push(h);i.push(l);i.push(g);i.push(k);i.push(b);i.push(a);$.each(q,function(u,v){var w={};w.formatString=i[u];w.type=v;r.push(w)});$.each(r,function(v,u){if(u.type===p){t=u.formatString.format(o)}});return t}function getfileUpload(d,b,e){var a=[];$.each(d,function(h,f){var j=mxUtils.parseXml(f.contentXML);if(j.documentElement.getAttribute("id")===e){var g={id:j.documentElement.getAttribute("pbid")};$.ajax({async:false,type:"GET",url:"/nera/playbook/api/get-by-id",data:g,contentType:"application/json",success:function(i){$.each(i.playbookInput,function(){if(this.type==="File"){a.push(this.fileInfo.filename)}})}})}});return a}function getfileUploadXMl(d,b,e){var a=[];$.each(d,function(h,f){var j=mxUtils.parseXml(f.contentXML);if(j.documentElement.getAttribute("id")===e){var g={id:j.documentElement.getAttribute("pbid")};$.ajax({async:false,type:"GET",url:"/nera/playbook/api/get-by-id",data:g,contentType:"application/json",success:function(i){a.push(i.fileName)}})}});return a}function mappingPlaybookInput(d,b,e){var a=[];$.each(d,function(g,f){let doc=mxUtils.parseXml(f.contentXML);new mxCodec(doc);if(doc.documentElement.getAttribute("id")===e){var h=doc.documentElement.getElementsByTagName("PLaybookInputElement");$.each(h,function(j,i){if(i.attributes["lalelvl_"+j].nodeValue==="Default value"){let variable=i.attributes.variable.nodeValue;if(i.attributes["manualinput_"+j].nodeValue==="false"){let json={id:doc.documentElement.getAttribute("pbid")};$.ajax({async:false,type:"GET",url:"/nera/playbook/api/get-by-id",data:json,contentType:"application/json",success:function(k){$("#playbookname").val(k.name);$.each(k.playbookInput,function(o,l){if(variable===l.variable){let mapping={};mapping.variable=variable;mapping.value=l.value;a.push(mapping)}})}})}else{let mapping={};mapping.variable=variable;mapping.value=i.attributes["value_"+j].nodeValue;a.push(mapping)}}else{let pbid=getPreviousOps(b,doc.documentElement.getAttribute("id"));let json={id:mxUtils.parseXml(getOpsbyId(d,pbid[0]).contentXML).documentElement.getAttribute("pbid")};if(pbid.length>0){$.ajax({async:false,type:"GET",url:"/nera/playbook/api/get-by-id",data:json,contentType:"application/json",success:function(k){$("#playbookname").val(k.name);$.each(k.playbookOutput,function(p,o){if(i.attributes["value_"+j].nodeValue.split(".")[1]===o.variable){var l={};l.variable=i.attributes.variable.nodeValue;l.value=o.value;a.push(l)}})}})}else{let variable=i.attributes.variable.nodeValue;let mapping={};mapping.variable=variable;mapping.value=i.attributes["lalelvl_"+j].nodeValue;console.log(i);a.push(mapping)}}})}});return a}String.prototype.format=function(a){var b=this;return b.replace(String.prototype.format.regex,function(d){let intVal=parseInt(d.substring(1,d.length-1));let replace;if(intVal>=0){replace=a[intVal]}else{if(intVal===-1){replace="{"}else{if(intVal===-2){replace="}"}else{replace=""}}}return replace})};String.prototype.format.regex=new RegExp("{-?[0-9]+}","g");$(document).ready(function(){var a=function a(b){var f=window.location.search.substring(1),e=f.split("&"),g,d;for(d=0;d<e.length;d++){g=e[d].split("=");if(g[0]===b){return g[1]===undefined?true:decodeURIComponent(g[1])}}};let mỵjobid=a("jobid");let workflowid=a("workflowid");$("#log-div").hide();$("#action-div-log").hide();Cookies.set("jobid",mỵjobid);Cookies.set("workflowid",workflowid);$.ajax({type:"GET",url:"/nera/job-planning/api/get-job-by-id?id="+mỵjobid,success:function(d){$("#jobid").val(d.jobId);Cookies.set("jobasign",d.id);$("#DateExec").text(d.executionDate);$("#TimeExec").text(d.startTime+" - "+d.endTime);$("#descriptionJob").text(d.jobDescription);$("#workflowName").text(d.workflowName);$("#jobAssignStatus").text(d.status);$("#plannerName").text(d.plannerName);$("#assigneeName").text(d.assigneeName);$("#jobNameLbl").text(d.jobName);$("#jobname").val(d.jobName);var b=d.executionDate.split("/")[2]+"-"+d.executionDate.split("/")[1]+"-"+d.executionDate.split("/")[0];$("#startExeDate").val(b+" "+d.startTime+":00");$("#endExeDate").val(b+" "+d.endTime+":00")}});$("#btnCancel1Job").on("click",function(){window.location.href="/menu/my-job/listing"});$("#btnExeJob").unbind().on("click",function(f){let dateNow=new Date();let months=["01","02","03","04","05","06","07","08","09","10","11","12"];let todayExe=dateNow.getFullYear()+"-"+months[dateNow.getMonth()]+"-"+("0"+dateNow.getDate()).slice(-2)+" "+("0"+dateNow.getHours()).slice(-2)+":"+("0"+dateNow.getMinutes()).slice(-2)+":00";if(todayExe>=$("#endExeDate").val()||todayExe<=$("#startExeDate").val()){var h="You can only start to execute the job at "+$("#startExeDate").val()+" - "+$("#endExeDate").val();Swal.fire({text:h,type:"error",timer:5000,showConfirmButton:false});return}$("#executionlog").empty();checkMessageStop=false;$.ajax({type:"POST",url:"/nera/my-job/api/delete-job-exe",data:{jobId:$("#jobid").val()},success:function(e){}});startDate=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];$("#log-div").show();$("#action-div-log").show();$(".btn").prop("disabled",true);$("#btnCancel2Job").prop("disabled",false);let keyMap=[];let dictItem1={};dictItem1.condition=1;keyMap.push(dictItem1);var i={};i.playbook=2;keyMap.push(i);var g={};g.approval=3;keyMap.push(g);var d={};d.userobject=4;keyMap.push((d));var b={id:parseInt(workflowid)};$.ajax({type:"POST",url:"/nera/api/load-workflow",data:b,success:function(e){$.ajax({type:"POST",async:false,url:"/nera/my-job/api/waiting-approve-update",data:{id:Cookies.get("jobasign")},success:function(k){console.log(k)}});let cells=e.workflowOperator;new mxCodec();let mappingFlow=getMappingFlow(cells,"connector");console.log(mappingFlow);let ops=getFullFlow(mappingFlow,"star",["star"]);let isRun=[];$.each(ops,function(){isRun.push(true)});$.ajax({async:false,type:"GET",url:"/nera/job-planning/api/get-job-pay-load?id=1",success:function(k){}});j(0,false,2000,false,ops,isRun,cells,mappingFlow,e,[]);function j(D,p,A,s,K,G,F,t,o,x){$("#btnCancel2Job").on("click",function(){checkMessageStop=true;let saveExe={};saveExe.result="complete";saveExe.executeStart=startDate;saveExe.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];saveExe.jobId=$("#jobid").val();saveExe.id=$("#jobexeid").val();saveExe.result="stopped";saveExe.log="";let jobOperatorExecutions=[];let jobOperatorExecution={};jobOperatorExecution.result="complete";jobOperatorExecution.type=keyMap[T.toLowerCase()];jobOperatorExecution.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecution.executeStart=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecutions.push(jobOperatorExecution);saveExe.jobOperatorExecutions=jobOperatorExecutions;let saveExeJson=JSON.stringify(saveExe);let assignId=a("jobid");$.ajax({type:"POST",url:"/nera/my-job/api/update-status-finish-job",data:{id:assignId,status:"Finished (Stopped)"},success:function(V){if($("#executionlog").text().indexOf("Job Execution stopped")<0){let dateUpdateStatus=getCurrentDatetime();$("#executionlog").append(getMsgTemplate("Stopped",dateUpdateStatus));$("#executionlog").append("<br>");let dt=new Date();let time=(dt.getMonth()+1)+"_"+dt.getDate()+"_"+dt.getFullYear()+"_"+dt.getHours()+"_"+dt.getMinutes()+"_"+dt.getSeconds()+"_"+dt.getMilliseconds();let name="execute_log_"+time+".txt";let assignIdParameter=a("jobid");$.ajax({type:"POST",url:"/nera/my-job/api/send-mail-log-execute",data:{contentFile:$("#executionlog").html(),fileName:name,jobAssignId:assignIdParameter},success:function(){}})}G[D+1]=false;J(saveExeJson,U,K[D],[])}});$("#btnCancel2Job").prop("disabled",true);$("#btnExeJob").prop("disabled",false);return false});document.onkeydown=function(){if(event.keyCode==116){Swal.fire({title:"System Error",text:"The system don't allow Roll back/ canceling when the job executing",type:"error",timer:2000,showConfirmButton:false});event.keyCode=0;event.returnValue=false}};document.oncontextmenu=function(){Swal.fire({title:"System Error",text:"The system don't allow Roll back/ canceling when the job executing",type:"error",timer:2000,showConfirmButton:false});event.returnValue=false};window.onbeforeunload=function(V){Swal.fire({title:"System Error",text:"The system don't allow Roll back/ canceling when the job executing",type:"error",timer:2000,showConfirmButton:false});V.cancelable=true;V.returnValue=false};if(G[D]&&!s){var z=mxUtils.parseXml(getOpsbyId(F,K[D]).contentXML).documentElement;var T=z.nodeName;console.log("_________________"+T);function J(X,W,V,Y){$.ajax({async:true,type:"POST",url:"/nera/my-job/api/save-job-exe",contentType:"application/json",data:X,success:function(Z){U(Z,V,Y)},error:function(aa,Z){console.log("An error occurred attempting to get new e-number")}})}if(T==="Condition"){var w=getCurrentDatetime();w.push(z.getAttribute("label"));appendMessges("Switch Case",w);var y=getSwitchCase(F,K[D]);y.sort(function(W,V){return parseFloat(V.playbook)-parseFloat(W.playbook)});var C=y[0].playbook;var l=[];l=submitComparePatt(y,C,l,x);var O=(getNextOps(t,K[D]));console.log(O);$.each(O,function(ab,Y){var Z=getfromMap(l,Y);var ad=combineConditions(Z);if(ad===false){G.splice(K.indexOf(Y),1);K.splice(K.indexOf(Y),1)}if(ad){var aa=getCurrentDatetime();var X=aa.push(mxUtils.parseXml(getOpsbyId(F,Y).contentXML).documentElement.getAttribute("label"));aa.push(" ");appendMessges("Switch Case Finish",aa);var ac={};ac.result="complete";ac.executeStart=startDate;ac.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];ac.jobId=$("#jobid").val();ac.id=$("#jobexeid").val();ac.result="complete";ac.log=X;var W=[];var V={};V.result="complete";V.type=keyMap[T.toLowerCase()];V.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];V.executeStart=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];W.push(V);ac.jobOperatorExecutions=W;let saveExeJson=JSON.stringify(ac);J(saveExeJson,U,K.indexOf(Y),[])}})}if(T==="Playbook"||T==="playbook"){var q=mappingPlaybookInput(F,t,K[D]);var v=getCurrentDatetime();v.push($("#playbookname").val());appendMessges("Playbook Execute",v);var N={};N.role="juniper";var r=[];var Q=[];var I=[];var k=[];var S=[];var M=[];var P=[];$.each(q,function(){M.push(this.variable);P.push(this.value)});var B=getfileUpload(F,t,K[D]);var H=getfileUploadXMl(F,t,K[D]);$.ajax({async:false,method:"GET",url:"/nera/job/api/get-by-id",data:{id:$("#jobid").val(),searchString:""},success:function(Z){console.log(Z);$.each(Z.listHost,function(){r.push(this.name);Q.push(this.username);I.push(this.password);k.push(this.port);S.push(this.ipAddress)});var X=new Date();var ac=(X.getMonth()+1)+"_"+X.getDate()+"_"+X.getFullYear()+"_"+X.getHours()+"_"+X.getMinutes()+"_"+X.getSeconds()+"_"+X.getMilliseconds();var V="playbook"+ac;N.title=" Get Device Facts";N.hostname=r;N.user=Q;N.pass=I;N.port=k;N.addressIps=S;N.yml=H;N.files=B;N.variable=M;N.value=P;N.foldername=V;N.jobName=$("#jobNameLbl").text();var W=JSON.stringify(N);function ab(ag,af,ae){let m;let listOutput=getPlaybookOutput(af.getAttribute("pbid"));let mapOutput=[];if(ae!==""){$.each(listOutput,function(){var ah=new RegExp('s*"'+this+' = ([^"]+)"',"g");m=ah.exec(ag);if(m){var ai={};ai.key=m[0].split("=")[0].trim().replace('"',"");ai.val=m[1];mapOutput.push(ai)}})}console.log(mapOutput);if(mapOutput.length>0){let dateTimeRunPlaybookSuccess=getCurrentDatetime();let saveExeResultSuccess={};saveExeResultSuccess.result="complete";saveExeResultSuccess.executeStart=startDate;saveExeResultSuccess.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];saveExeResultSuccess.jobId=$("#jobid").val();saveExeResultSuccess.id=$("#jobexeid").val();let resultExecutePlaybook=ae.replace("Result execute :","").replace("<br/>","");saveExeResultSuccess.result=resultExecutePlaybook;saveExeResultSuccess.log=ag;let jobOperatorExecutions=[];let jobOperatorExecution={};jobOperatorExecution.result="complete";jobOperatorExecution.type=keyMap[T.toLowerCase()];jobOperatorExecution.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecution.executeStart=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecutions.push(jobOperatorExecution);saveExeResultSuccess.jobOperatorExecutions=jobOperatorExecutions;let saveExeJson=JSON.stringify(saveExeResultSuccess);if(resultExecutePlaybook.indexOf("Ok")>=0){appendMessges("Playbook Receive",dateTimeRunPlaybookSuccess);J(saveExeJson,U,D+1,mapOutput)}else{let jobAssignId=a("jobid");$.ajax({type:"POST",url:"/nera/my-job/api/update-status-finish-job",data:{id:jobAssignId,status:"Finished (Failed)"},success:function(ah){J(saveExeJson,U,-1,mapOutput)}})}}else{let dateTimeRunPlaybookFail=getCurrentDatetime();dateTimeRunPlaybookFail.push($("#playbookname").val());var ad={};ad.id=$("#jobexeid").val();ad.result="complete";ad.executeStart=startDate;ad.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];ad.jobId=$("#jobid").val();if(ag===""||ag.indexOf("ERROR")>=0){ad.log=appendMessges("Connect Failed",dateTimeRunPlaybookFail);ad.result="Connect Rabbit Failed."}else{ad.log=appendMessges("Playbook Receive",dateTimeRunPlaybookFail);ad.result="NG"}let jobOperatorExecutions=[];let jobOperatorExecution={};jobOperatorExecution.result="complete";jobOperatorExecution.type=keyMap[T.toLowerCase()];jobOperatorExecution.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecution.executeStart=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecutions.push(jobOperatorExecution);ad.jobOperatorExecutions=jobOperatorExecutions;let saveExeJson=JSON.stringify(ad);if(ag===""||ag.indexOf("ERROR")>=0){let jobAssignId=a("jobid");$.ajax({type:"POST",url:"/nera/my-job/api/update-status-finish-job",data:{id:jobAssignId,status:"Finished (Failed)"},success:function(ah){J(saveExeJson,U,-1,[])}})}else{J(saveExeJson,U,D+1,[])}}}function aa(ae,ad,af){$.ajax({type:"POST",url:"/nera/my-job/api/runplaybook/",data:{foldername:ae},success:function(ag){let dateTimeRunPlaybook=getCurrentDatetime();if(ag===""||ag.indexOf("ERROR")>=0){ab(ag,af,"")}else{let input=ag;let reOk=new RegExp("s*ok=([^  ]+)","g");let n=reOk.exec(input);let result="";let replayRecap=new RegExp("s*PLAY RECAP([^*]+)","g");let c=replayRecap.exec(input);if(c.length>1){if(n!==null&&parseInt(n[1])>0){result="Result execute: Ok <br/>"}else{if(n!==null&&parseInt(n[1])<0){result="Result execute: Failed <br/>"}else{if(input.indexOf("PLAY RECAP")){result="Result execute: Ok <br/>"}}}dateTimeRunPlaybook.push(result+input);appendMessges("Result Playbook",dateTimeRunPlaybook);ab(input,af,result)}}},error:function(ah,ag){ab("",af,"")}})}Y(W,aa,z,ab);function Y(ag,ae,af,ad){$.ajax({type:"POST",url:"/nera/my-job/api/create-playbook-exe-folder",contentType:"application/json",data:ag,success:function(ah){aa(ah,ad,af)}})}}})}if(T==="UserObject"){if(z.getAttribute("id")==="star"){let dateTimeStart=getCurrentDatetime();dateTimeStart.push("START");let msg=appendMessges("Start",dateTimeStart);let saveExeStart={};saveExeStart.executeStart=startDate;saveExeStart.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];saveExeStart.jobId=$("#jobid").val();saveExeStart.result="complete";saveExeStart.log=msg;let jobOperatorExecutions=[];let jobOperatorExecution={};jobOperatorExecution.result="complete";jobOperatorExecution.type=keyMap[T.toLowerCase()];jobOperatorExecution.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecution.executeStart=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecutions.push(jobOperatorExecution);saveExeStart.jobOperatorExecutions=jobOperatorExecutions;let saveExeJson=JSON.stringify(saveExeStart);J(saveExeJson,U,D+1,[])}else{let dateTimeEnd=getCurrentDatetime();let msg=dateTimeEnd.push("END");appendMessges("End",dateTimeEnd);var R={};R.executeStart=startDate;R.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];R.jobId=$("#jobid").val();R.result="complete";R.log=msg;let jobOperatorExecutions=[];let jobOperatorExecution={};jobOperatorExecution.result="complete";jobOperatorExecution.type=keyMap[T.toLowerCase()];jobOperatorExecution.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecution.executeStart=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecutions.push(jobOperatorExecution);R.jobOperatorExecutions=jobOperatorExecutions;R.result="complete";let saveExeJson=JSON.stringify(R);let jobAssignId=a("jobid");$.ajax({type:"POST",url:"/nera/my-job/api/update-status-finish-job",data:{id:jobAssignId,status:"Finished (Approved)"},success:function(V){}});J(saveExeJson,U,-1,[])}}if(T==="Approval"){let job_exe_id=$("#jobexeid").val();var E=getCurrentDatetime();$.ajax({type:"POST",url:"/nera/my-job/api/save-jobopsexeapproval",data:{jobExeId:job_exe_id,approvedBy:z.getAttribute("approver")},success:function(V){$.ajax({type:"POST",url:"/nera/my-job/api/send-request-email",data:{jobName:$("#jobname").val(),requestAt:E[0],approvalUrl:window.location.origin+"/menu/approval-request",email:z.getAttribute("approver")},success:function(W){}})}});u();var L=getCurrentDatetime();appendMessges("Approver",L);let msg=L.push(z.getAttribute("approver").replace(","," "));let myInter=setInterval(u,6000);function u(){$.ajax({async:false,type:"GET",url:"/nera/job-planning/api/get-job-by-id?id="+Cookies.get("jobid"),success:function(W){if(W.status==="Finished (Approved)"){clearInterval(myInter);var V={};V.result="complete";V.executeStart=startDate;V.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];V.jobId=$("#jobid").val();V.id=$("#jobexeid").val();V.result="complete";V.log=msg;let jobOperatorExecutions=[];let jobOperatorExecution={};jobOperatorExecution.result="complete";jobOperatorExecution.type=keyMap[T.toLowerCase()];jobOperatorExecution.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecution.executeStart=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecutions.push(jobOperatorExecution);V.jobOperatorExecutions=jobOperatorExecutions;let saveExeJson=JSON.stringify(V);J(saveExeJson,U,D+1,[]);let dateTimeFinishApp=getCurrentDatetime();dateTimeFinishApp.push(z.getAttribute("approver").replace(","," "));appendMessges("Approver Status",dateTimeFinishApp)}if(W.status==="Finished (Rejected)"){clearInterval(myInter);let saveExeRejected={};saveExeRejected.result="complete";saveExeRejected.executeStart=startDate;saveExeRejected.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];saveExeRejected.jobId=$("#jobid").val();saveExeRejected.id=$("#jobexeid").val();saveExeRejected.result="complete";saveExeRejected.log=msg;let jobOperatorExecutions=[];let jobOperatorExecution={};jobOperatorExecution.result="complete";jobOperatorExecution.type=keyMap[T.toLowerCase()];jobOperatorExecution.executeEnd=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecution.executeStart=getCurrentDatetime()[0]+" "+getCurrentDatetime()[1];jobOperatorExecutions.push(jobOperatorExecution);saveExeRejected.jobOperatorExecutions=jobOperatorExecutions;let saveExeJson=JSON.stringify(saveExeRejected);J(saveExeJson,U,K.indexOf("end1"),[])}}})}}function U(Y,V,aa){if(V!==-1){$("#jobexeid").val(Y);j(V,p,A,false,K,G,F,t,o,aa)}else{var X=new Date();var Z=(X.getMonth()+1)+"_"+X.getDate()+"_"+X.getFullYear()+"_"+X.getHours()+"_"+X.getMinutes()+"_"+X.getSeconds()+"_"+X.getMilliseconds();var W="execute_log_"+Z+".txt";let jobAssignId=a("jobid");$.ajax({type:"POST",url:"/nera/my-job/api/send-mail-log-execute",data:{contentFile:$("#executionlog").html(),fileName:W,jobAssignId:jobAssignId},success:function(){}});$("#btnCancel1Job").prop("disabled",false);$("#btnExportJob").prop("disabled",false);$("#btnCancel2Job").prop("disabled",true)}}}$("#btnExportJob").unbind().on("click",function(){var W=new Date();var X=(W.getMonth()+1)+"_"+W.getDate()+"_"+W.getFullYear()+"_"+W.getHours()+"_"+W.getMinutes()+"_"+W.getSeconds()+"_"+W.getMilliseconds();var V="execute_log_"+X+".txt";$.ajax({type:"POST",url:"/nera/my-job/api/export-log-execute",data:{txt:$("#executionlog").html(),path:V},success:function(Y){downloadFileLog(V)}})})}}})})});